{"version":3,"file":"static/js/983.8abe8902.chunk.js","mappings":"uKAuBA,UArBe,WACb,OACE,SAAC,KAAD,CACEA,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CACZC,OAAQ,SACRC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEbC,aAAa,0BACbC,WAAW,UACXC,MAAM,WAGX,C,kFCpBD,EAA8B,gCAA9B,EAAkF,sCAAlF,EAA4I,sCAA5I,EAAwM,wCAAxM,EAAqQ,uC,SC4CrQ,EAxCmB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAUK,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAGrBC,EAAS,yCAAqCD,GAEpD,OACE,eAAaL,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEM,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMX,GACfE,UAAWC,EAHb,WAKE,gBACES,IAAKL,EAAcC,EAXzB,4DAYMK,IAAKP,EACLJ,UAAWC,KAEb,iBAAMD,UAAWC,EAAjB,SAA6CG,QAXxCD,EAeZ,KAGN,C,2HC1BKS,EAAc,CAClBtB,SAAU,YACVuB,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAqCT,UAlCiB,WACf,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,oGAElBJ,GAAa,GAFK,UAGcK,EAAAA,EAAAA,MAHd,OAGZC,EAHY,OAIlBR,EAAeQ,EAAkBC,SAJf,gDAMlBL,EAAS,KAAMM,SANG,yBAQlBR,GAAa,GARK,4EAAH,qDAYnBI,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACRM,EAAAA,GAAAA,MAAYR,EAAOd,EACpB,GAAE,CAACc,KAGF,iCACE,wBAAI,oBACJ,SAAC,IAAD,CAAY7B,UAAWyB,IACtBE,IAAa,SAAC,UAAD,MAGnB,C,+LChDKW,EAAM,+BACNC,EAAU,mCAEHN,EAAiB,mCAAG,oGACRO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sDAC+BC,IAFvB,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAa,mCAAG,WAAMC,GAAN,uFACJJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,+BACQM,EADR,uDAC4DL,EAD5D,YADI,cACrBE,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObG,EAAS,mCAAG,WAAMvC,GAAN,uFACAkC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLhC,EADK,mCACwBiC,IAFxB,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTI,EAAY,mCAAG,WAAMxC,GAAN,uFACHkC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLhC,EADK,2CACgCiC,IAF7B,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAc,mCAAG,WAAMzC,GAAN,uFACLkC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLhC,EADK,2CACgCiC,IAF3B,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,qD","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/api.js"],"sourcesContent":["import { MagnifyingGlass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"MagnifyingGlass-loading\"\n      wrapperStyle={{\n        margin: '0 auto',\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor=\"#c0efff\"\n      color=\"#e15b64\"\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movies-list\":\"MoviesList_movies-list__xnKYG\",\"movies-list__item\":\"MoviesList_movies-list__item__nrRBh\",\"movies-list__link\":\"MoviesList_movies-list__link__leO8M\",\"movies-list__poster\":\"MoviesList_movies-list__poster__gmqFV\",\"movies-list__title\":\"MoviesList_movies-list__title__mH8y+\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ filmsList }) => {\n  const location = useLocation();\n  return (\n    <ul className={css['movies-list']}>\n      {filmsList.map(({ id, title, poster_path }) => {\n        const defaultImg =\n          'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n        const posterUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n        return (\n          <li key={id} className={css['movies-list__item']}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={css['movies-list__link']}\n            >\n              <img\n                src={poster_path ? posterUrl : defaultImg}\n                alt={title}\n                className={css['movies-list__poster']}\n              />\n              <span className={css['movies-list__title']}>{title}</span>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  filmsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import React from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\n\nconst toastConfig = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nconst HomePage = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const requestMovies = async () => {\n      try {\n        setIsLoading(true);\n        const trendingDayMovies = await getTrendingMovies();\n        setTrendMovies(trendingDayMovies.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    requestMovies();\n  }, []);\n\n  useEffect(() => {\n    toast.error(error, toastConfig);\n  }, [error]);\n\n  return (\n    <>\n      <h1>Trending Today</h1>\n      <MoviesList filmsList={trendMovies} />\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9768baa5071faaf4c13ac6e91d2a589d';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getFilmSearch = async query => {\n  const response = await axios.get(\n    `${URL}/search/movie?query=${query}&include_adult=false&language=en-US&api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nexport const getFilmId = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getFilmsCast = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getFilmReviews = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["visible","height","width","ariaLabel","wrapperStyle","margin","position","top","left","transform","wrapperClass","glassColor","color","filmsList","location","useLocation","className","css","map","id","title","poster_path","posterUrl","to","state","from","src","alt","toastConfig","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","useState","trendMovies","setTrendMovies","isLoading","setIsLoading","error","setError","useEffect","requestMovies","getTrendingMovies","trendingDayMovies","results","message","toast","URL","API_KEY","axios","response","data","getFilmSearch","query","getFilmId","getFilmsCast","getFilmReviews"],"sourceRoot":""}